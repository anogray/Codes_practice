//https://leetcode.com/problems/median-of-two-sorted-arrays/

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int nums1_length = nums1.length;
        int nums2_length = nums2.length;
        int total = nums1_length + nums2_length+1;
        int half = total/2;
        int lo = 0, hi = nums1.length;
        int mid1;
        int mid2;
        
        while(lo<=hi)
        {
            mid1 = lo + (hi-lo)/2;
            mid2 = half - mid1;
            
            if(mid1 > lo &&  nums1[mid1-1] > nums2[mid2])
            {
                hi = mid1-1;
            }
            else if(mid1 < hi &&nums2[mid2-1] > nums1[mid1 ])
            {
                lo = mid1+1;
            }
            else
            {
                int leftmax =0, rightmax = 0;
                
                if(mid1==0) {leftmax = nums2[mid2];}
                else if(mid2==0) {leftmax = nums1[mid1-1];}
                else {leftmax = Math.max(nums1[mid1-1], nums2[mid2]);}
                if((nums1.length + nums2.length)%2==1) {return leftmax;}
                
                if(mid1==nums1.length) {rightmax = nums2[mid2];}
                else if(mid2==nums2.length) {rightmax=nums1[mid1];}
                else {rightmax = Math.min(nums1[mid1], nums2[mid2]);}
                
                return (leftmax+rightmax)/2.0;
            }
            
        }
        
                    return 0.0;

        
    }
}

// 10 20 30 40 50 60
// 0   1  2  3  4  5
// x=50
// mid = 0 + 5/2 or 0+5/2

    
// if(mid<x)
//     lo=mid+1;

// lo = 3
// hi = 5;

// 3 + 5-3/2 or 3+5/2

// 3+1 or 8/2 =
    
//     lo + hi/2 - lo/2
    
    
