//https://practice.geeksforgeeks.org/problems/remove-duplicates-from-an-unsorted-linked-list/1
class GfG
{
    // Function to remove duplicates from the given linked list
    
    // O (n^2)
    // public Node removeDuplicates(Node head) 
    // {
    //     Node ptr1 = head;
    //     Node ptr2 = head;
        
    //         while(ptr1!=null)
    //         {
    //             ptr2 = ptr1;
    //             while(ptr2!=null && ptr2.next!=null)
    //             {
    //                 if(ptr1.data == ptr2.next.data)
    //                 {
    //                     ptr2.next = ptr2.next.next;
    //                 }
    //                 else{
    //                  ptr2 = ptr2.next;   
    //                 }
    //             }
    //             ptr1= ptr1.next;
    //         }
    //         return head;
    // }
    
     //O(n) and space O(n)
     public Node removeDuplicates(Node head) 
    {
        Node ptr1 = head;
        Node make = head;
        Node send = make;
        
        HashSet<Integer> set = new HashSet<>();
        set.add(ptr1.data);
        while(ptr1!=null)
        {
            if(!set.contains(ptr1.data)){
            set.add(ptr1.data);
            make.next = ptr1;
            make=ptr1;
            }
            ptr1 = ptr1.next;
        }
        make.next=null;
        return send;
    }
}